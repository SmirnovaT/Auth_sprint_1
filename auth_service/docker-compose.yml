services:
  auth-service:
    build: .
    restart: always
    depends_on:
      users_db:
        condition: service_healthy
      cache:
        condition: service_started
    networks:
      - authnetwork

  users_db:
    image: postgres:16.0
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    restart: always
    container_name: users_db
    networks:
      - authnetwork
    volumes:
      - ./db_data/postgres_data:/var/lib/postgresql/data
    healthcheck:
       test: ["CMD-SHELL", "pg_isready -h localhost -U $$POSTGRES_USER -d $$POSTGRES_DB"]
       interval: 5s
       timeout: 10s
       retries: 5

  cache:
    image: redis:7.2.4-alpine
    environment:
      REDIS_USER: ${REDIS_USER}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
     - ./redis-data:/var/lib/redis
    networks:
      - authnetwork

  nginx:
      image: nginx:1.25.4
      restart: always
      volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf:ro
      depends_on:
        - auth-service
      networks:
        - authnetwork


networks:
  authnetwork:
